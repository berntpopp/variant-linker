{
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Bash(gh issue list:*)",
      "Bash(gh issue view:*)",
      "Bash(git checkout:*)",
      "Bash(rg:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(npm test)",
      "Bash(./node_modules/.bin/mocha:*)",
      "Bash(DEBUG=variant-linker:detailed ./node_modules/.bin/mocha test/inheritance-integration.test.js --grep \"should correctly identify de novo variants\" --timeout 60000)",
      "Bash(DEBUG=variant-linker:detailed ./node_modules/.bin/mocha test/inheritance-integration.test.js --grep \"should correctly identify de novo variants\" --timeout 60000 2 >& 1)",
      "Bash(npm run lint)",
      "Bash(npm run lint:*)",
      "Bash(npm test:*)",
      "Bash(git add:*)",
      "Bash(git fetch:*)",
      "Bash(git merge:*)",
      "Bash(grep:*)",
      "Bash(git commit:*)",
      "Bash(git pull:*)",
      "Bash(npx create-docusaurus:*)",
      "Bash(mkdir:*)",
      "Bash(npm init:*)",
      "Bash(npm install:*)",
      "Bash(rm:*)",
      "Bash(curl:*)",
      "Bash(npm cache clean:*)",
      "Bash(git push:*)",
      "Bash(cp:*)",
      "Bash(sed:*)",
      "Bash(npm run build:*)",
      "Bash(DEBUG=variant-linker:detailed npm test -- --grep \"should use globally aggregated variables\")",
      "Bash(npx eslint:*)",
      "Bash(node:*)",
      "Bash(git rm:*)",
      "Bash(npx mocha:*)",
      "Bash(timeout:*)",
      "Bash(DEBUG=variant-linker:*)",
      "Bash(/dev/null)",
      "Bash(echo:*)",
      "Bash(npx webpack:*)",
      "Bash(npm search:*)",
      "Bash(cut:*)",
      "Bash(# Extract variant positions from VCF format input file\nawk 'NF >= 5 && $1 != \"\" {print $1\":\"$2\"-\"$2}' \"/mnt/c/development/variant-linker/test/fixtures/consistency/test_variants_input_2024-06-20.txt\" | sort\n\necho \"--- VEP Output Variants ---\"\n# Extract variant positions from VEP output (removing ranges and converting to single positions)\ngrep -v \"^#\" \"/mnt/c/development/variant-linker/test/fixtures/consistency/VEP_online_output_test_variants_2024-06-20.txt\" | cut -f2 | sed 's/-[0-9]*$//' | sort | uniq)",
      "Bash(# Extract variant positions from VCF format input file\nawk 'NF >= 5 && $1 != \"\" {print $1\":\"$2}' \"/mnt/c/development/variant-linker/test/fixtures/consistency/test_variants_input_2024-06-20.txt\" | sort)",
      "Bash(awk:*)",
      "Bash(DEBUG='variant-linker:*' node src/main.js --variant \"rs6025\" --output JSON --local-vep-path /usr/bin/vep 2 >& 1)",
      "Bash(DEBUG='variant-linker:*' node src/main.js --variant \"1-100-A-T\" --output JSON 2 >& 1)",
      "Bash(conda activate:*)",
      "Bash(DEBUG='variant-linker:*' node src/main.js -i test/fixtures/test.vcf --use-local-vep --output JSON -dd)",
      "Bash(DEBUG='variant-linker:scoring*' node src/main.js --variant \"20-23637934-T-G\" --scoring_config_path scoring/nephro_variant_score/ --output JSON 2 >& 1)",
      "Bash(DEBUG='variant-linker:scoring' node src/main.js --variant \"20-23637934-T-G\" --scoring_config_path scoring/nephro_variant_score/ --output JSON 2 >& 1)",
      "Bash(DEBUG='variant-linker:scoring:detailed' node src/main.js --variant \"20-23637934-T-G\" --scoring_config_path scoring/test_aggregator/ --output JSON 2 >& 1)",
      "Bash(DEBUG='variant-linker:scoring*' node src/main.js --variant \"20-23637934-T-G\" --scoring_config_path scoring/test_aggregator/ --output JSON 2 >& 1)",
      "Bash(DEBUG='variant-linker:*' npx mocha test/feature-annotation-integration.test.js -g \"should include UserFeatureOverlap in CSV output\")",
      "Bash(npm uninstall:*)",
      "Bash(mv:*)",
      "Bash(npm run test:ci:*)",
      "Bash(variant-linker:*)",
      "WebFetch(domain:axios-http.com)",
      "Bash(iconv:*)"
    ],
    "deny": []
  }
}